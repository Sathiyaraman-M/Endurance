@page "/books"
@attribute [Authorize(Policy = Permissions.Books.View)]
@inject IBookHttpClient _bookHttpClient
<PageTitle>Books | @ApplicationConstants.LibraryName</PageTitle>

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-2">Books</MudText>
<MudText Color="Color.Surface" Class="mb-4">Manage all books here</MudText>
<MudTable Elevation="0" Outlined Hover HorizontalScrollbar Dense ServerData="new Func<TableState, Task<TableData<BookResponse>>>(OnServerReloadAsync)" @ref="MudTable" LoadingProgressColor="Color.Secondary">
    <NoRecordsContent>
        <MudAlert Severity="Severity.Normal">No books in the library. Try to fill 'em up!</MudAlert>
    </NoRecordsContent>
    <LoadingContent>
        <MudText Typo="Typo.body1" Align="Align.Center" GutterBottom>Loading...</MudText>
    </LoadingContent>
    <ToolBarContent>
        <MudHidden Breakpoint=Breakpoint.SmAndDown Invert>
            @if(_canCreate)
            {
                <MudIconButton DisableElevation Variant="Variant.Filled" Color="Color.Success" OnClick="@(() => navigationManager.NavigateTo("books/add"))" Icon=@Icons.Material.Filled.Add Size=Size.Small Class="me-2" />
            }
            <MudIconButton DisableElevation Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(() => OnSearch(""))" Icon="@Icons.Material.Filled.Refresh" Size=Size.Small Class="me-2" />
            @if (_canExport)
            {
                <MudIconButton DisableElevation Variant="Variant.Filled" Color="Color.Dark" OnClick="ExportToExcelAsync" Icon="@Icons.Custom.FileFormats.FileExcel" Size=Size.Small Class="me-2" />
            }
            <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="Search for Books" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Margin="Margin.Dense" Class="mt-0 mb-3"></MudTextField>
        </MudHidden>
        <MudHidden Breakpoint=Breakpoint.MdAndUp Invert>
            <div class="justify-center mud-text-align-center">
                @if (_canCreate)
                {
                    <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Success" OnClick="@(() => navigationManager.NavigateTo("books/add"))" StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Surface" Class="me-2">Add</MudButton>
                }
                <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(() => OnSearch(""))" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Class="me-2">Reload</MudButton>
                @if (_canExport)
                {
                    <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Dark" OnClick="ExportToExcelAsync" StartIcon="@Icons.Custom.FileFormats.FileExcel" IconColor="Color.Success" Class="me-2">Export To Excel</MudButton>
                }        
            </div>
            <MudSpacer />
            <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="Search for Books" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
        </MudHidden>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel T="BookResponse" SortLabel="DeweyIndex">Dewey Index</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="BookResponse" SortLabel="Name">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="BookResponse" SortLabel="ISBN">ISBN</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="BookResponse" SortLabel="Author">Author</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="BookResponse" SortLabel="Publisher">Publisher</MudTableSortLabel></MudTh>
        @if (_canView)
        {
            <MudTh Style="text-align:right">View</MudTh>
        }
        @if (_canEdit)
        {
            <MudTh Style="text-align:right">Edit</MudTh>
        }
        @if (_canDelete)
        {
            <MudTh Style="text-align:right">Delete</MudTh>
        }
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Dewey Index">
            <MudHighlighter Text="@context.DeweyIndex" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Name">
            <MudHighlighter Text="@context.Name" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="ISBN">
            <MudHighlighter Text="@context.ISBN" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Author">
            <MudHighlighter Text="@context.Author" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Publisher">
            <MudHighlighter Text="@context.Publisher" HighlightedText="@_searchString" />
        </MudTd>
        @if (_canView)
        {
            <MudTd DataLabel="View" Style="text-align:right">
                <MudFab DisableElevation Color="Color.Secondary" Icon="@Icons.Material.Filled.OpenInNew" Size="Size.Small" OnClick="@(() => navigationManager.NavigateTo($"books/{context.Id}"))" />
            </MudTd>
        }
        @if (_canEdit)
        {
            <MudTd DataLabel="Edit" Style="text-align:right">
                <MudFab DisableElevation Color="Color.Warning" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" OnClick="@(() => navigationManager.NavigateTo($"books/{context.Id}/edit"))" />
            </MudTd>
        }
        @if (_canDelete)
        {
            <MudTd DataLabel="Delete" Style="text-align:right">
                <MudFab DisableElevation Color="Color.Error" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="(() => Delete(context.Id))" />
            </MudTd>
        }
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>