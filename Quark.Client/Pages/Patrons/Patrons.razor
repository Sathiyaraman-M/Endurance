@page "/administration/patrons"
@attribute [Authorize(Policy = Permissions.Patrons.View)]
@inject IPatronHttpClient _patronHttpClient
<PageTitle>Patrons | @ApplicationConstants.LibraryName</PageTitle>

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-2">Patrons</MudText>
<MudText Color="Color.Surface" Class="mb-4">Manage all patrons here</MudText>
<MudTable Elevation="0" Outlined HorizontalScrollbar Dense ServerData="new Func<TableState, Task<TableData<PatronResponse>>>(OnServerReloadAsync)" @ref="mudTable" LoadingProgressColor="Color.Secondary">
    <NoRecordsContent>
        <MudAlert Severity="Severity.Normal">No patrons records available</MudAlert>
    </NoRecordsContent>
    <LoadingContent>
        <MudText Typo="Typo.body1" Align="Align.Center" GutterBottom="true">Loading...</MudText>
    </LoadingContent>
    <ToolBarContent>
        <MudHidden Breakpoint=Breakpoint.SmAndDown Invert>
            @if(_canCreate)
            {
                <MudIconButton DisableElevation Variant="Variant.Filled" Color="Color.Success" OnClick="@(() => InvokeModal(Guid.Empty))" Icon=@Icons.Material.Filled.Add Size=Size.Small Class="me-2" />
            }
            <MudIconButton DisableElevation Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(() => OnSearch(""))" Icon="@Icons.Material.Filled.Refresh" Size=Size.Small Class="me-2" />
            @if (_canExport)
            {
                <MudIconButton DisableElevation Variant="Variant.Filled" Color="Color.Dark" OnClick="ExportToExcelAsync" Icon="@Icons.Custom.FileFormats.FileExcel" Size=Size.Small Class="me-2" />
            }
            <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="Search for Patrons" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Margin="Margin.Dense" Class="mt-0 mb-3"></MudTextField>
        </MudHidden>
        <MudHidden Breakpoint=Breakpoint.MdAndUp Invert>
            <div class="justify-center mud-text-align-center">
                @if (_canCreate)
                    {
                    <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Success" OnClick="(() => InvokeModal(Guid.Empty))" StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Surface" Class="me-2">Add</MudButton>
                    }
                <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(() => OnSearch(""))" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Class="me-2">Reload</MudButton>
                @if (_canExport)
                {
                    <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Dark" OnClick="ExportToExcelAsync" StartIcon="@Icons.Custom.FileFormats.FileExcel" IconColor="Color.Success" Class="me-2">Export To Excel</MudButton>
                } 
            </div>
            <MudSpacer />
            <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="Search for Patrons" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
        </MudHidden>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel T="PatronResponse" InitialDirection="SortDirection.Ascending" SortLabel="RegisterId">Register ID</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="PatronResponse" SortLabel="Name">Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="PatronResponse" SortLabel="Email">Email</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="PatronResponse" SortLabel="Mobile">Mobile</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="PatronResponse" SortLabel="CurrentFees">Current Due</MudTableSortLabel></MudTh>
        @if (_canView)
            {
            <MudTh Style="text-align:center">View</MudTh>
            }
        @if (_canEdit)
            {
            <MudTh Style="text-align:center">Edit</MudTh>
            }
        @if (_canDelete)
            {
            <MudTh Style="text-align:center">Delete</MudTh>
            }
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Register ID">
            <MudHighlighter Text="@context.RegisterId" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Name">
            <MudHighlighter Text="@context.Name" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Email">
            <MudHighlighter Text="@context.Email" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Mobile">
            <MudHighlighter Text="@context.Mobile" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Current Due">
            <MudHighlighter Text="@context.CurrentFees.ToString()" HighlightedText="@_searchString" />
        </MudTd>
        @if (_canView)
            {
            <MudTd DataLabel="View" Style="text-align:center">
                <MudFab DisableElevation Color="Color.Secondary" Icon="@Icons.Material.Filled.OpenInNew" Size="Size.Small" OnClick="@(() => navigationManager.NavigateTo($"administration/patrons/{context.Id}"))" />
            </MudTd>
            }
        @if (_canEdit)
            {
            <MudTd DataLabel="Edit" Style="text-align:center">
                <MudFab DisableElevation Color="Color.Warning" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" OnClick="(() => InvokeModal(context.Id))" />
            </MudTd>
            }
        @if (_canDelete)
            {
            <MudTd DataLabel="Delete" Style="text-align:center">
                <MudFab DisableElevation Color="Color.Error" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="(() => Delete(context.Id))" />
            </MudTd>
            }
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>