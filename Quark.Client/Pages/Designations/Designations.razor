@page "/Designations"
@attribute [Authorize(Policy = Permissions.Designations.View)]
@inject IDesignationHttpClient _designationHttpClient
<PageTitle>Designations | @ApplicationConstants.LibraryName</PageTitle>

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-2">Designations</MudText>
<MudText Color="Color.Surface" Class="mb-4">Manage all designations here</MudText>
@if (!_loaded)
{
    <MudProgressLinear Color="Color.Primary" Indeterminate="true" />
}
else
{
    <MudTable Elevation=0 Outlined Items="_designations" Dense="true" Filter="new Func<DesignationResponse, bool>(Search)" @bind-designation="_designation" Ho>
        <ToolBarContent>
            <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert>
                @if(_canCreate)
                {
                    <MudIconButton Variant=Variant.Filled DisableElevation Color="Color.Success" OnClick="(() => InvokeModal(Guid.Empty))" Icon="@Icons.Material.Filled.Add" Size=Size.Small Class="me-2" />
                }
                <MudIconButton Variant=Variant.Filled DisableElevation Color=Color.Secondary OnClick=GetDesignationsAsync Icon=@Icons.Material.Filled.Refresh Size=Size.Small Class="me-2" />
                @if(_canExport)
                {
                    <MudIconButton Variant=Variant.Filled DisableElevation Color="Color.Dark" OnClick=ExportToExcelAsync Icon=@Icons.Custom.FileFormats.FileExcel Size=Size.Small Class="me-2" />
                }
                <MudTextField @bind-Value="_searchString" Immediate Placeholder="Search for Designations" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Margin=Margin.Dense Class="mt-0 mb-3" />
        </MudHidden>
            <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert>
                <div class="justify-center mud-text-align-center">
                    @if (_canCreate)
                    {
                        <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Success" OnClick="(() => InvokeModal(Guid.Empty))" StartIcon="@Icons.Material.Filled.Add" IconColor="Color.Surface" Class="me-2">Create</MudButton>
                    }
                    <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Secondary" OnClick="GetDesignationsAsync" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Class="me-2">Reload</MudButton>
                    @if (_canExport)
                    {
                        <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Dark" OnClick="ExportToExcelAsync" StartIcon="@Icons.Custom.FileFormats.FileExcel" IconColor="Color.Success" Class="me-2">Export To Excel</MudButton>
                    }
                 </div>
                <MudSpacer />
                <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="Search for Designations" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
            </MudHidden>
        </ToolBarContent>
        <HeaderContent>           
            <MudTh><MudTableSortLabel SortBy="new Func<DesignationResponse, object>(x => x.Name)">Name</MudTableSortLabel></MudTh>
            @if (_canEdit)
            {
                <MudTh Style="text-align:right">Edit</MudTh>
            }
            @if (_canDelete)
            {
                <MudTh Style="text-align:right">Delete</MudTh>
            }
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">
                <MudHighlighter Text="@context.Name" HighlightedText="@_searchString" />
            </MudTd>
            @if (_canEdit)
            {
                <MudTd DataLabel="Edit" Style="text-align:right">
                    <MudFab DisableElevation Color="Color.Warning" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" OnClick="(() => InvokeModal(context.Id))" />
                </MudTd>
            }
            @if (_canDelete)
            {
                <MudTd DataLabel="Delete" Style="text-align:right">
                    <MudFab DisableElevation Color="Color.Error" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="(() => Delete(context.Id))" />
                </MudTd>
            }
        </RowTemplate>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
}