@page "/administration/checkouts"
@attribute [Authorize(Policy = Permissions.Checkouts.View)]
@inject CheckoutHttpClient _checkoutHttpClient
<PageTitle>Checkouts | @ApplicationConstants.LibraryName</PageTitle>

<style>
    .mud-table-container {
        overflow: auto;
    }
</style>

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-2">Checkouts</MudText>
<MudText Color="Color.Surface" Class="mb-4">Manage all book checkouts here</MudText>
<MudDivider Class="mb-4" />
@if (_canView)
{
    <EditForm Model="Checkout" OnValidSubmit="AddCheckoutAsync">
        <MudCard Outlined Elevation="0">
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.body1">Checkout</MudText>
                    <MudText Typo="Typo.body2">Enter Patron RegisterID and Book Barcode</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Variant=Variant.Outlined Margin=Margin.Dense @bind-Value="Checkout.BookBarcode" Label="Book Barcode" HelperText="Enter book barcode here" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Variant=Variant.Outlined Margin=Margin.Dense @bind-Value="Checkout.PatronRegisterId" Label="Patron ID" HelperText="Enter patron register ID here" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudDatePicker Variant=Variant.Outlined Margin=Margin.Dense PickerVariant="PickerVariant.Dialog" @ref="picker1" DateFormat="dd/MM/yyyy" @bind-Date="Checkout.CheckedOutSince" Label="Checkout Date">
                        <PickerActions>
                            <MudButton OnClick="@(() => picker1.Close(false))">Cancel</MudButton>
                            <MudButton Color="Color.Primary" OnClick="@(() => picker1.Close())">Ok</MudButton>
                        </PickerActions>
                        </MudDatePicker>
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudDatePicker Variant=Variant.Outlined Margin=Margin.Dense PickerVariant="PickerVariant.Dialog" @ref="picker2" DateFormat="dd/MM/yyyy" @bind-Date="Checkout.ExpectedCheckInDate" Label="Checkout Date">
                            <PickerActions>
                                <MudButton OnClick="@(() => picker2.Close(false))">Cancel</MudButton>
                                <MudButton Color="Color.Primary" OnClick="@(() => picker2.Close())">Ok</MudButton>
                            </PickerActions>
                        </MudDatePicker>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions>
                <MudButton DisableElevation Variant="Variant.Filled" Class="ml-auto my-2" Color="Color.Default" Size="Size.Large" OnClick="ResetModel">Clear</MudButton>
                <MudButton DisableElevation ButtonType="ButtonType.Submit" Variant="Variant.Filled" Class="ma-2" Color="Color.Success" Size="Size.Large">Add Checkout</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>
}
<MudTable Class="mt-4" Elevation="0" Outlined Hover HorizontalScrollbar Dense ServerData="new Func<TableState, Task<TableData<CheckoutResponse>>>(OnServerReloadAsync)" @ref="mudTable" LoadingProgressColor="Color.Secondary">
    <NoRecordsContent>
        <MudAlert Severity="Severity.Normal">No checkouts done yet!</MudAlert>
    </NoRecordsContent>
    <LoadingContent>
        <MudText Typo="Typo.body1" Align="Align.Center" GutterBottom>Loading...</MudText>
    </LoadingContent>
    <ColGroup>
        <col />
        <col />
        <col />
        <col />
        <col />
        <col />
        <col />
    </ColGroup>
    <ToolBarContent>
        <div class="justify-center mud-text-align-center">
            <MudButton DisableElevation Variant=Variant.Filled Color=Color.Primary OnClick=InvokeCheckInModal StartIcon=@Icons.Material.Filled.Update IconColor=Color.Surface Class="me-2">Check In Book Now</MudButton>
            <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(() => OnSearch(""))" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Class="me-2">Reload</MudButton>
        </div>
        <MudSpacer />
        <MudTextField T=string ValueChanged=@((S) => OnSearch(S)) Immediate="true" Placeholder="Search for Checkouts" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>
        @*<div class="justify-center mud-text-align-center">
            <MudButton DisableElevation Variant=Variant.Filled Color=Color.Primary OnClick=InvokeCheckInModal StartIcon=@Icons.Material.Filled.Update IconColor=Color.Surface Class="me-2">Check In Book Now</MudButton>
            <MudButton DisableElevation Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(() => OnSearch(""))" StartIcon="@Icons.Material.Filled.Refresh" IconColor="Color.Surface" Class="me-2">Reload</MudButton>
        </div>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Immediate="true" Placeholder="Search for Checkouts" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0 mb-3"></MudTextField>*@
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel T="CheckoutResponse" SortLabel="BookBarcode">Book Barcode</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="CheckoutResponse" SortLabel="BookName">Book Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="CheckoutResponse" SortLabel="PatronRegisterId">Patron ID</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="CheckoutResponse" SortLabel="PatronName">Patron Name</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="CheckoutResponse" SortLabel="CheckedOutSince">Checkout Date</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="CheckoutResponse" SortLabel="ExpectedCheckInDate">Expected Return Date</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel T="CheckoutResponse" SortLabel="CheckedOutUntil">Check In Date</MudTableSortLabel></MudTh>
        @if (_canView)
        {
            <MudTh Style="text-align:center">View</MudTh>
        }
        @if (_canDelete)
        {
            <MudTh Style="text-align:center">Delete</MudTh>
        }
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Book Barcode">
            <MudHighlighter Text="@context.BookBarcode" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Book Name">
            <MudHighlighter Text="@context.BookName" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Patron ID">
            <MudHighlighter Text="@context.PatronRegisterId" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Patron Name">
            <MudHighlighter Text="@context.PatronName" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Checkout Date">
            <MudHighlighter Text="@context.CheckedOutSince.ToString("dd/MM/yyyy")" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Expected Return Date">
            <MudHighlighter Text="@context.ExpectedCheckInDate.ToString("dd/MM/yyyy")" HighlightedText="@_searchString" />
        </MudTd>
        <MudTd DataLabel="Check In Date">
            @if (context.CheckedOutUntil.HasValue)
            {
                <MudHighlighter Text="@context.CheckedOutUntil.Value.ToString("dd/MM/yyyy")" HighlightedText="@_searchString" />
            }
            else
            {
                <MudText Typo="Typo.body1" Color="Color.Warning">Yet to check in</MudText>
            }
        </MudTd>
        @if (_canView)
        {
            <MudTd DataLabel="View" Style="text-align:center">
                <MudFab DisableElevation Color="Color.Secondary" Icon="@Icons.Material.Filled.OpenInNew" Size="Size.Small" />
            </MudTd>
        }
        @if (_canDelete)
        {
            <MudTd DataLabel="Delete" Style="text-align:center">
                <MudFab DisableElevation Color="Color.Error" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" OnClick="(() => Delete(context.Id))" />
            </MudTd>
        }
    </RowTemplate>
</MudTable>