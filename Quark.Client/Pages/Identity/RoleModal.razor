@inject IRoleHttpClient _roleHttpClient

<EditForm Model="@RoleModel" OnValidSubmit="SaveAsync">
    <FluentValidationValidator @ref="_fluentValidationValidator" />
    <MudDialog>
        <TitleContent>
            @if (RoleModel.Id == null)
            {
                <MudText Typo="Typo.h6"><MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />Add Role</MudText>
            }
            else
            {
                <MudText Typo="Typo.h6"><MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1" />Update Role</MudText>
            }
        </TitleContent>
        <DialogContent>
            <MudTextField For="@(() => RoleModel.Id)" @bind-Value="RoleModel.Id" Label="Role ID" Disabled />
            <MudTextField For="@(() => RoleModel.Name)" @bind-Value="RoleModel.Name" Label="Role Name" />
            <MudTextField For="@(() => RoleModel.Description)" @bind-Value="RoleModel.Description" Label="Description" />
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" OnClick=@(() => MudDialog.Cancel())>Cancel</MudButton>
            <MudButton Variant="Variant.Filled" ButtonType="ButtonType.Submit" Disabled="@(!Validated)" Color="Color.Success">@(RoleModel.Id == null ? "Add" : "Save")</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>